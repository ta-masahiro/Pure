
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'APPLY CALLCC CAMMA COL COMMENT DEC DEF DIVIDE DOTS EQUAL FALSE FLOAT FRACT GEQ GT ID IF IN INC INT IS LAMBDA LBRAC LBRAK LEQ LET LPAREN LT MACRO MINUS NEQ NONE NOT PERC PLUS POW RBRAC RBRAK RPAREN SEMICOL SET STR TIMES TRUE VAR WHILE\n    expression  : expression_2op\n                | expression_set\n                | expression_if\n                | expression_lambda\n                | expression_decl\n                | expression_function_decl\n                | expression_while\n                | expression_macro\n    \n    expression_2op  : term\n                    | expression_2op PLUS term\n                    | expression_2op MINUS term\n                    | expression_2op ID term\n    \n    expression_set  : ID LET expression\n                    | SET ID LET expression\n                    | SET ID LBRAK expression RBRAK LET expression\n\n    \n    expression_if   : IF expression COL expression COL expression\n                    | IF expression COL expression\n    \n    expression_lambda   : LAMBDA LPAREN args DOTS RPAREN expression \n                        | LAMBDA LPAREN args RPAREN expression\n                        | LAMBDA LPAREN RPAREN expression\n    \n    args    : ID\n            | args CAMMA ID\n    \n    expression_macro    : MACRO LPAREN args DOTS RPAREN expression \n                        | MACRO LPAREN args RPAREN expression\n                        | MACRO LPAREN RPAREN expression\n                        | MACRO expression\n    \n    expression_function_decl : DEF ID LPAREN args RPAREN LET expression\n                             | DEF ID LPAREN args DOTS RPAREN LET expression\n                             | DEF ID LPAREN RPAREN LET expression\n    \n    expression_decl : VAR ID\n                    | VAR ID LET expression\n    \n    expression_while    : WHILE expression COL expression\n    \n    mult_expression : left_mult_exp RBRAC\n    \n    left_mult_exp   : left_mult_exp SEMICOL expression\n                    | left_mult_exp CAMMA expression\n                    | LBRAC expression\n                    | LBRAC\n    \n    term    : term_2op\n            | term_1op\n    \n    term_2op    : factor\n                | term TIMES    factor\n                | term DIVIDE   factor\n                | term POW      factor\n                | term PERC     factor\n                | term EQUAL    factor\n                | term NEQ      factor\n                | term GEQ      factor\n                | term LEQ      factor\n                | term GT       factor\n                | term LT       factor\n                | term IS       factor\n    \n    term_1op    : MINUS factor\n                | NOT factor\n    \n    factor  : bool \n            | none\n            | number\n            | var\n            | vector\n            | dict\n            | string\n            | vect_ref\n            | vect_slice\n            | f_call\n            | br_expr\n            | mult_expression\n            | function_apply\n            | function_set\n            | function_if\n            | function_lambda\n            | call_cc\n    \n    none    : NONE\n    \n    bool    : TRUE\n            | FALSE\n    \n    number  : INT \n            | FLOAT\n            | FRACT\n    \n    var : ID\n    \n    string : STR\n    \n    vector  : lvector RBRAK\n            | LBRAK RBRAK\n    \n    lvector : lvector CAMMA expression\n            | LBRAK expression\n    \n    dict    : ldict  RBRAC\n            | LBRAC RBRAC\n    \n    ldict   : ldict CAMMA expression COL expression\n            | LBRAC expression COL expression\n    \n    vect_ref : factor LBRAK expression RBRAK\n    \n    vect_slice  : factor LBRAK factor COL factor RBRAK\n    \n    br_expr : LPAREN expression RPAREN\n    \n    f_call  : factor LPAREN params DOTS RPAREN\n            | factor LPAREN params RPAREN\n            | factor LPAREN RPAREN\n    \n    params  : params CAMMA expression\n            | expression\n    \n    function_set    : SET LPAREN ID CAMMA expression RPAREN\n    \n    function_apply  : APPLY LPAREN params RPAREN\n    \n    function_if : IF LPAREN expression CAMMA expression CAMMA expression RPAREN\n    \n    function_lambda : LAMBDA LPAREN LPAREN args DOTS RPAREN  CAMMA expression RPAREN\n                    | LAMBDA LPAREN LPAREN args RPAREN CAMMA expression RPAREN\n                    | LAMBDA LPAREN LPAREN RPAREN CAMMA expression RPAREN\n    \n    call_cc : CALLCC LPAREN expression RPAREN\n    '
    
_lr_action_items = {'ID':([0,2,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,77,78,81,82,87,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,123,125,127,129,130,131,132,134,135,136,139,143,151,153,157,158,165,167,168,170,171,172,174,175,178,182,183,188,189,192,195,196,198,200,203,207,210,212,214,215,217,219,],[12,58,-9,71,-77,76,12,12,12,84,85,12,12,-38,-39,-40,71,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,12,-78,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-52,-77,12,122,-80,12,128,135,12,12,-53,-79,12,-83,12,-84,-33,12,12,12,12,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,12,12,12,12,128,12,-89,12,128,12,12,-77,-40,-92,12,12,12,12,185,12,71,-87,-91,12,12,-96,-101,12,12,12,12,12,-90,12,-95,12,12,12,-88,12,-100,12,-97,-99,-98,]),'SET':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[13,72,13,13,13,13,13,72,13,72,72,72,72,72,72,72,72,72,72,72,72,72,72,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,72,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'IF':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[15,73,15,15,15,15,15,73,15,73,73,73,73,73,73,73,73,73,73,73,73,73,73,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,73,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LAMBDA':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[16,74,16,16,16,16,16,74,16,74,74,74,74,74,74,74,74,74,74,74,74,74,74,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,74,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'VAR':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'DEF':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'WHILE':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'MACRO':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'MINUS':([0,2,10,12,14,15,17,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,56,57,58,70,71,75,78,81,87,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,123,127,129,130,132,134,135,136,139,143,151,153,157,165,168,170,171,172,174,175,178,182,183,188,189,192,195,196,198,200,203,207,210,212,214,215,217,219,],[11,57,-9,-77,11,11,11,11,11,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,11,-78,11,11,11,-52,-77,11,-80,11,11,11,11,-53,-79,11,-83,11,-84,-33,11,11,11,11,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,11,11,11,11,11,-89,11,11,11,-77,-40,-92,11,11,11,11,11,-87,-91,11,11,-96,-101,11,11,11,11,11,-90,11,-95,11,11,11,-88,11,-100,11,-97,-99,-98,]),'NOT':([0,14,15,17,20,21,51,56,57,58,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TRUE':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'FALSE':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NONE':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'INT':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'FLOAT':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'FRACT':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'LBRAK':([0,11,12,14,15,17,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,81,87,89,90,91,92,93,94,95,96,98,99,100,101,102,106,107,108,109,110,111,112,113,114,115,116,117,120,121,123,127,129,130,132,134,135,136,139,143,151,153,157,165,167,168,170,171,172,174,175,178,182,183,188,189,191,192,195,196,198,200,203,207,210,212,214,215,217,219,],[14,14,-77,14,14,14,14,14,89,14,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,14,-78,14,14,14,14,14,14,14,14,14,14,14,14,14,14,89,-77,14,121,-80,14,14,14,14,89,-79,14,-83,14,-84,-33,14,14,14,14,89,89,89,89,89,89,89,89,89,89,89,14,14,14,14,14,-89,14,14,14,-77,89,-92,14,14,14,14,14,14,-87,-91,14,14,-96,-101,14,14,14,14,14,89,-90,14,-95,14,14,14,-88,14,-100,14,-97,-99,-98,]),'LBRAC':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'STR':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'LPAREN':([0,11,12,13,14,15,16,17,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,81,82,85,87,89,90,91,92,93,94,95,96,98,99,100,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,123,127,129,130,132,134,135,136,139,143,151,153,157,165,167,168,170,171,172,174,175,178,182,183,188,189,191,192,195,196,198,200,203,207,210,212,214,215,217,219,],[17,17,-77,77,17,81,82,17,17,87,90,17,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,17,-78,101,102,17,17,17,17,17,17,17,17,17,17,17,17,17,17,90,-77,77,117,118,17,-80,17,125,131,17,17,17,90,-79,17,-83,17,-84,-33,17,17,17,17,90,90,90,90,90,90,90,90,90,90,90,17,125,17,17,17,17,-89,17,17,17,-77,90,-92,17,17,17,17,17,17,-87,-91,17,17,-96,-101,17,17,17,17,17,90,-90,17,-95,17,17,17,-88,17,-100,17,-97,-99,-98,]),'APPLY':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'CALLCC':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'$end':([1,2,3,4,5,6,7,8,9,10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,84,88,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,129,139,149,152,159,160,163,166,168,170,174,175,184,190,192,196,197,202,205,206,207,208,212,213,215,217,218,219,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-30,-26,-53,-79,-83,-84,-33,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-13,-89,-92,-14,-17,-20,-31,-32,-25,-87,-91,-96,-101,-19,-24,-90,-95,-16,-18,-29,-23,-88,-15,-100,-27,-97,-99,-28,-98,]),'RBRAK':([2,3,4,5,6,7,8,9,10,12,14,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,70,71,78,79,84,88,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,129,136,137,139,141,149,150,152,159,160,163,166,168,170,174,175,184,190,191,192,196,197,202,205,206,207,208,212,213,215,217,218,219,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-77,78,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,92,-78,-52,-77,-80,-82,-30,-26,-53,-79,-83,-84,-33,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-13,-89,-40,168,-92,-81,-14,176,-17,-20,-31,-32,-25,-87,-91,-96,-101,-19,-24,207,-90,-95,-16,-18,-29,-23,-88,-15,-100,-27,-97,-99,-28,-98,]),'CAMMA':([2,3,4,5,6,7,8,9,10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,70,71,78,79,84,88,91,92,94,96,97,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,122,124,126,128,129,133,135,138,139,140,141,144,145,146,148,149,152,154,155,159,160,161,163,166,168,170,173,174,175,179,181,184,185,190,192,193,194,196,197,199,202,205,206,207,208,212,213,215,217,218,219,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,93,95,-37,-78,100,-52,-77,-80,-82,-30,-26,-53,-79,-83,-84,-36,-33,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-13,151,153,158,-21,-89,158,-21,171,-92,-94,-81,-34,-35,171,153,-14,-17,158,182,-20,-31,158,-32,-25,-87,-91,-86,-96,-101,198,200,-19,-22,-24,-90,-93,-85,-95,-16,210,-18,-29,-23,-88,-15,-100,-27,-97,-99,-28,-98,]),'COL':([2,3,4,5,6,7,8,9,10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,80,84,86,88,91,92,94,96,97,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,129,136,139,142,149,152,159,160,163,166,168,170,174,175,184,190,192,196,197,202,205,206,207,208,212,213,215,217,218,219,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,123,-30,132,-26,-53,-79,-83,-84,143,-33,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-13,-89,167,-92,172,-14,178,-20,-31,-32,-25,-87,-91,-96,-101,-19,-24,-90,-95,-16,-18,-29,-23,-88,-15,-100,-27,-97,-99,-28,-98,]),'RPAREN':([2,3,4,5,6,7,8,9,10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,82,83,84,87,88,90,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,124,125,126,128,129,131,133,135,138,139,140,146,147,149,152,154,156,159,160,161,163,164,166,168,169,170,174,175,177,180,184,185,187,190,192,193,196,197,201,202,205,206,207,208,209,211,212,213,215,216,217,218,219,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,127,129,-30,134,-26,139,-53,-79,-83,-84,-33,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-13,129,155,157,-21,-89,162,165,-21,170,-92,-94,174,175,-14,-17,181,183,-20,-31,186,-32,189,-25,-87,192,-91,-96,-101,196,199,-19,-22,204,-24,-90,-93,-95,-16,212,-18,-29,-23,-88,-15,215,217,-100,-27,-97,219,-99,-28,-98,]),'RBRAC':([2,3,4,5,6,7,8,9,10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,70,71,78,84,88,91,92,94,96,97,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,129,139,144,145,149,152,159,160,163,166,168,170,173,174,175,184,190,192,194,196,197,202,205,206,207,208,212,213,215,217,218,219,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,94,96,-78,98,-52,-77,-80,-30,-26,-53,-79,-83,-84,-36,-33,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-13,-89,-92,-34,-35,-14,-17,-20,-31,-32,-25,-87,-91,-86,-96,-101,-19,-24,-90,-85,-95,-16,-18,-29,-23,-88,-15,-100,-27,-97,-99,-28,-98,]),'SEMICOL':([2,3,4,5,6,7,8,9,10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,70,71,78,84,88,91,92,94,96,97,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,129,139,144,145,149,152,159,160,163,166,168,170,174,175,184,190,192,196,197,202,205,206,207,208,212,213,215,217,218,219,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-37,-78,99,-52,-77,-80,-30,-26,-53,-79,-83,-84,-36,-33,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-13,-89,-92,-34,-35,-14,-17,-20,-31,-32,-25,-87,-91,-96,-101,-19,-24,-90,-95,-16,-18,-29,-23,-88,-15,-100,-27,-97,-99,-28,-98,]),'DOTS':([2,3,4,5,6,7,8,9,10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,84,88,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,126,128,129,133,135,138,139,140,149,152,154,159,160,161,163,166,168,170,174,175,184,185,190,192,193,196,197,202,205,206,207,208,212,213,215,217,218,219,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-30,-26,-53,-79,-83,-84,-33,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-13,156,-21,-89,164,-21,169,-92,-94,-14,-17,180,-20,-31,187,-32,-25,-87,-91,-96,-101,-19,-22,-24,-90,-93,-95,-16,-18,-29,-23,-88,-15,-100,-27,-97,-99,-28,-98,]),'PLUS':([2,10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[56,-9,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,-10,-11,-12,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'TIMES':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[59,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,59,59,59,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'DIVIDE':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[60,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,60,60,60,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'POW':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[61,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,61,61,61,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'PERC':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[62,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,62,62,62,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'EQUAL':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[63,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,63,63,63,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'NEQ':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[64,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,64,64,64,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'GEQ':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[65,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,65,65,65,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'LEQ':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[66,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,66,66,66,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'GT':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[67,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,67,67,67,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'LT':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[68,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,68,68,68,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'IS':([10,12,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,70,71,78,91,92,94,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,129,135,136,139,168,170,174,175,192,196,207,212,215,217,219,],[69,-77,-38,-39,-40,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-72,-73,-71,-74,-75,-76,-78,-52,-77,-80,-53,-79,-83,-84,-33,69,69,69,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-89,-77,-40,-92,-87,-91,-96,-101,-90,-95,-88,-100,-97,-99,-98,]),'LET':([12,76,84,135,162,176,186,204,],[75,120,130,75,188,195,203,214,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[1,79,80,83,86,88,97,119,124,83,137,140,141,142,144,145,140,147,148,149,150,152,159,160,163,166,173,177,179,184,190,193,194,197,201,202,205,206,208,209,211,213,216,218,]),'expression_2op':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'expression_set':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expression_if':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expression_lambda':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expression_decl':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression_function_decl':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expression_while':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'expression_macro':([0,14,15,17,20,21,51,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'term':([0,14,15,17,20,21,51,56,57,58,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[10,10,10,10,10,10,10,103,104,105,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'term_2op':([0,14,15,17,20,21,51,56,57,58,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'term_1op':([0,14,15,17,20,21,51,56,57,58,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,171,172,178,182,183,188,189,195,198,200,203,210,214,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'factor':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[24,70,24,24,24,24,24,91,24,24,24,24,106,107,108,109,110,111,112,113,114,115,116,24,24,24,136,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,191,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'bool':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'none':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'number':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'var':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'vector':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'dict':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'string':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'vect_ref':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'vect_slice':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'f_call':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'br_expr':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'mult_expression':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'function_apply':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'function_set':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'function_if':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'function_lambda':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'call_cc':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'lvector':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'ldict':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'left_mult_exp':([0,11,14,15,17,20,21,25,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,89,90,93,95,99,100,101,102,117,120,121,123,127,130,132,134,143,151,153,157,165,167,171,172,178,182,183,188,189,195,198,200,203,210,214,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'args':([82,87,125,131,],[126,133,154,161,]),'params':([90,101,],[138,146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression_2op','expression',1,'p_expression','yacc_test.py',189),
  ('expression -> expression_set','expression',1,'p_expression','yacc_test.py',190),
  ('expression -> expression_if','expression',1,'p_expression','yacc_test.py',191),
  ('expression -> expression_lambda','expression',1,'p_expression','yacc_test.py',192),
  ('expression -> expression_decl','expression',1,'p_expression','yacc_test.py',193),
  ('expression -> expression_function_decl','expression',1,'p_expression','yacc_test.py',194),
  ('expression -> expression_while','expression',1,'p_expression','yacc_test.py',195),
  ('expression -> expression_macro','expression',1,'p_expression','yacc_test.py',196),
  ('expression_2op -> term','expression_2op',1,'p_expression_2op','yacc_test.py',202),
  ('expression_2op -> expression_2op PLUS term','expression_2op',3,'p_expression_2op','yacc_test.py',203),
  ('expression_2op -> expression_2op MINUS term','expression_2op',3,'p_expression_2op','yacc_test.py',204),
  ('expression_2op -> expression_2op ID term','expression_2op',3,'p_expression_2op','yacc_test.py',205),
  ('expression_set -> ID LET expression','expression_set',3,'p_expression_set','yacc_test.py',243),
  ('expression_set -> SET ID LET expression','expression_set',4,'p_expression_set','yacc_test.py',244),
  ('expression_set -> SET ID LBRAK expression RBRAK LET expression','expression_set',7,'p_expression_set','yacc_test.py',245),
  ('expression_if -> IF expression COL expression COL expression','expression_if',6,'p_expression_if','yacc_test.py',273),
  ('expression_if -> IF expression COL expression','expression_if',4,'p_expression_if','yacc_test.py',274),
  ('expression_lambda -> LAMBDA LPAREN args DOTS RPAREN expression','expression_lambda',6,'p_expression_lambda','yacc_test.py',289),
  ('expression_lambda -> LAMBDA LPAREN args RPAREN expression','expression_lambda',5,'p_expression_lambda','yacc_test.py',290),
  ('expression_lambda -> LAMBDA LPAREN RPAREN expression','expression_lambda',4,'p_expression_lambda','yacc_test.py',291),
  ('args -> ID','args',1,'p_args','yacc_test.py',311),
  ('args -> args CAMMA ID','args',3,'p_args','yacc_test.py',312),
  ('expression_macro -> MACRO LPAREN args DOTS RPAREN expression','expression_macro',6,'p_expression_macro','yacc_test.py',319),
  ('expression_macro -> MACRO LPAREN args RPAREN expression','expression_macro',5,'p_expression_macro','yacc_test.py',320),
  ('expression_macro -> MACRO LPAREN RPAREN expression','expression_macro',4,'p_expression_macro','yacc_test.py',321),
  ('expression_macro -> MACRO expression','expression_macro',2,'p_expression_macro','yacc_test.py',322),
  ('expression_function_decl -> DEF ID LPAREN args RPAREN LET expression','expression_function_decl',7,'p_expression_func_decl','yacc_test.py',343),
  ('expression_function_decl -> DEF ID LPAREN args DOTS RPAREN LET expression','expression_function_decl',8,'p_expression_func_decl','yacc_test.py',344),
  ('expression_function_decl -> DEF ID LPAREN RPAREN LET expression','expression_function_decl',6,'p_expression_func_decl','yacc_test.py',345),
  ('expression_decl -> VAR ID','expression_decl',2,'p_decl_exp','yacc_test.py',362),
  ('expression_decl -> VAR ID LET expression','expression_decl',4,'p_decl_exp','yacc_test.py',363),
  ('expression_while -> WHILE expression COL expression','expression_while',4,'p_while_exp','yacc_test.py',370),
  ('mult_expression -> left_mult_exp RBRAC','mult_expression',2,'p_mult_expression','yacc_test.py',376),
  ('left_mult_exp -> left_mult_exp SEMICOL expression','left_mult_exp',3,'p_lieft_mult_exp','yacc_test.py',391),
  ('left_mult_exp -> left_mult_exp CAMMA expression','left_mult_exp',3,'p_lieft_mult_exp','yacc_test.py',392),
  ('left_mult_exp -> LBRAC expression','left_mult_exp',2,'p_lieft_mult_exp','yacc_test.py',393),
  ('left_mult_exp -> LBRAC','left_mult_exp',1,'p_lieft_mult_exp','yacc_test.py',394),
  ('term -> term_2op','term',1,'p_term','yacc_test.py',405),
  ('term -> term_1op','term',1,'p_term','yacc_test.py',406),
  ('term_2op -> factor','term_2op',1,'p_term_2op','yacc_test.py',414),
  ('term_2op -> term TIMES factor','term_2op',3,'p_term_2op','yacc_test.py',415),
  ('term_2op -> term DIVIDE factor','term_2op',3,'p_term_2op','yacc_test.py',416),
  ('term_2op -> term POW factor','term_2op',3,'p_term_2op','yacc_test.py',417),
  ('term_2op -> term PERC factor','term_2op',3,'p_term_2op','yacc_test.py',418),
  ('term_2op -> term EQUAL factor','term_2op',3,'p_term_2op','yacc_test.py',419),
  ('term_2op -> term NEQ factor','term_2op',3,'p_term_2op','yacc_test.py',420),
  ('term_2op -> term GEQ factor','term_2op',3,'p_term_2op','yacc_test.py',421),
  ('term_2op -> term LEQ factor','term_2op',3,'p_term_2op','yacc_test.py',422),
  ('term_2op -> term GT factor','term_2op',3,'p_term_2op','yacc_test.py',423),
  ('term_2op -> term LT factor','term_2op',3,'p_term_2op','yacc_test.py',424),
  ('term_2op -> term IS factor','term_2op',3,'p_term_2op','yacc_test.py',425),
  ('term_1op -> MINUS factor','term_1op',2,'p_term_1op','yacc_test.py',457),
  ('term_1op -> NOT factor','term_1op',2,'p_term_1op','yacc_test.py',458),
  ('factor -> bool','factor',1,'p_factor','yacc_test.py',471),
  ('factor -> none','factor',1,'p_factor','yacc_test.py',472),
  ('factor -> number','factor',1,'p_factor','yacc_test.py',473),
  ('factor -> var','factor',1,'p_factor','yacc_test.py',474),
  ('factor -> vector','factor',1,'p_factor','yacc_test.py',475),
  ('factor -> dict','factor',1,'p_factor','yacc_test.py',476),
  ('factor -> string','factor',1,'p_factor','yacc_test.py',477),
  ('factor -> vect_ref','factor',1,'p_factor','yacc_test.py',478),
  ('factor -> vect_slice','factor',1,'p_factor','yacc_test.py',479),
  ('factor -> f_call','factor',1,'p_factor','yacc_test.py',480),
  ('factor -> br_expr','factor',1,'p_factor','yacc_test.py',481),
  ('factor -> mult_expression','factor',1,'p_factor','yacc_test.py',482),
  ('factor -> function_apply','factor',1,'p_factor','yacc_test.py',483),
  ('factor -> function_set','factor',1,'p_factor','yacc_test.py',484),
  ('factor -> function_if','factor',1,'p_factor','yacc_test.py',485),
  ('factor -> function_lambda','factor',1,'p_factor','yacc_test.py',486),
  ('factor -> call_cc','factor',1,'p_factor','yacc_test.py',487),
  ('none -> NONE','none',1,'p_none','yacc_test.py',493),
  ('bool -> TRUE','bool',1,'p_factor_bool','yacc_test.py',499),
  ('bool -> FALSE','bool',1,'p_factor_bool','yacc_test.py',500),
  ('number -> INT','number',1,'p_factor_num','yacc_test.py',507),
  ('number -> FLOAT','number',1,'p_factor_num','yacc_test.py',508),
  ('number -> FRACT','number',1,'p_factor_num','yacc_test.py',509),
  ('var -> ID','var',1,'p_factor_var','yacc_test.py',515),
  ('string -> STR','string',1,'p_factor_str','yacc_test.py',535),
  ('vector -> lvector RBRAK','vector',2,'p_vector','yacc_test.py',541),
  ('vector -> LBRAK RBRAK','vector',2,'p_vector','yacc_test.py',542),
  ('lvector -> lvector CAMMA expression','lvector',3,'p_lvector','yacc_test.py',561),
  ('lvector -> LBRAK expression','lvector',2,'p_lvector','yacc_test.py',562),
  ('dict -> ldict RBRAC','dict',2,'p_dict','yacc_test.py',569),
  ('dict -> LBRAC RBRAC','dict',2,'p_dict','yacc_test.py',570),
  ('ldict -> ldict CAMMA expression COL expression','ldict',5,'p_ldict','yacc_test.py',583),
  ('ldict -> LBRAC expression COL expression','ldict',4,'p_ldict','yacc_test.py',584),
  ('vect_ref -> factor LBRAK expression RBRAK','vect_ref',4,'p_factor_ref','yacc_test.py',593),
  ('vect_slice -> factor LBRAK factor COL factor RBRAK','vect_slice',6,'p_factor_slice','yacc_test.py',598),
  ('br_expr -> LPAREN expression RPAREN','br_expr',3,'p_factor_br_expr','yacc_test.py',604),
  ('f_call -> factor LPAREN params DOTS RPAREN','f_call',5,'p_factor_f_call','yacc_test.py',610),
  ('f_call -> factor LPAREN params RPAREN','f_call',4,'p_factor_f_call','yacc_test.py',611),
  ('f_call -> factor LPAREN RPAREN','f_call',3,'p_factor_f_call','yacc_test.py',612),
  ('params -> params CAMMA expression','params',3,'p_params','yacc_test.py',647),
  ('params -> expression','params',1,'p_params','yacc_test.py',648),
  ('function_set -> SET LPAREN ID CAMMA expression RPAREN','function_set',6,'p_factor_set','yacc_test.py',654),
  ('function_apply -> APPLY LPAREN params RPAREN','function_apply',4,'p_factor_apply','yacc_test.py',659),
  ('function_if -> IF LPAREN expression CAMMA expression CAMMA expression RPAREN','function_if',8,'p_factor_if','yacc_test.py',668),
  ('function_lambda -> LAMBDA LPAREN LPAREN args DOTS RPAREN CAMMA expression RPAREN','function_lambda',9,'p_factor_lambda','yacc_test.py',679),
  ('function_lambda -> LAMBDA LPAREN LPAREN args RPAREN CAMMA expression RPAREN','function_lambda',8,'p_factor_lambda','yacc_test.py',680),
  ('function_lambda -> LAMBDA LPAREN LPAREN RPAREN CAMMA expression RPAREN','function_lambda',7,'p_factor_lambda','yacc_test.py',681),
  ('call_cc -> CALLCC LPAREN expression RPAREN','call_cc',4,'p_factor_callcc','yacc_test.py',688),
]
