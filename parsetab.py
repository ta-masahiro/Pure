
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'APPLY CALLCC CAMMA COL COMMENT DEF DIVIDE DOTS EQUAL FALSE FLOAT FRACT GEQ GT ID IF INT IS LAMBDA LBRAC LBRAK LEQ LET LPAREN LT MACRO MINUS NEQ NOT PERC PLUS POW RBRAC RBRAK RPAREN SEMICOL SET STR TIMES TRUE VAR WHILE\n    expression  : term\n                | expression_2op\n                | expression_set\n                | expression_if\n                | expression_lambda\n                | expression_decl\n                | expression_function_decl\n                | expression_while\n                | expression_macro\n    \n    expression_2op  : expression PLUS expression\n                    | expression MINUS expression\n                    | expression ID expression\n    \n    expression_set  : ID LET expression\n                    | SET ID LET expression\n                    | SET ID LBRAK expression RBRAK LET expression\n\n    \n    expression_if   : IF expression COL expression COL expression\n    \n    expression_lambda   : LAMBDA LPAREN args DOTS RPAREN expression \n                        | LAMBDA LPAREN args RPAREN expression\n                        | LAMBDA LPAREN RPAREN expression\n    \n    args    : ID\n            | args CAMMA ID\n    \n    expression_macro    : MACRO LPAREN args DOTS RPAREN expression \n                        | MACRO LPAREN args RPAREN expression\n                        | MACRO LPAREN RPAREN expression\n                        | MACRO expression\n    \n    expression_function_decl : DEF ID LPAREN args RPAREN LET expression\n                             | DEF ID LPAREN args DOTS RPAREN LET expression\n                             | DEF ID LPAREN RPAREN LET expression\n    \n    expression_decl : VAR ID\n                    | VAR ID LET expression\n    \n    expression_while    : WHILE expression COL expression\n    \n    mult_expression : left_mult_exp RBRAC\n    \n    left_mult_exp   : left_mult_exp SEMICOL expression\n                    | left_mult_exp CAMMA expression\n                    | LBRAC expression\n                    | LBRAC\n    \n    term    : factor\n            | term_2op\n            | term_1op\n    \n    term_2op    : term TIMES    factor\n                | term DIVIDE   factor\n                | term POW      factor\n                | term PERC     factor\n                | term EQUAL    factor\n                | term NEQ      factor\n                | term GEQ      factor\n                | term LEQ      factor\n                | term GT       factor\n                | term LT       factor\n                | term IS       factor\n    \n    term_1op    : MINUS factor\n                | NOT factor\n    \n    factor  : bool\n            | number\n            | var\n            | vector\n            | dict\n            | string\n            | vect_ref\n            | vect_slice\n            | f_call\n            | br_expr\n            | mult_expression\n            | function_apply\n            | function_set\n            | function_if\n            | function_lambda\n            | call_cc\n    \n    bool    : TRUE\n            | FALSE\n    \n    number  : INT \n            | FLOAT\n            | FRACT\n    \n    var : ID\n    \n    string : STR\n    \n    vector  : lvector RBRAK\n            | LBRAK RBRAK\n    \n    lvector : lvector CAMMA expression\n            | LBRAK expression\n    \n    dict    : ldict  RBRAC\n            | LBRAC RBRAC\n    \n    ldict   : ldict CAMMA expression COL expression\n            | LBRAC expression COL expression\n    \n    vect_ref : factor LBRAK expression RBRAK\n    \n    vect_slice  : factor LBRAK factor COL factor RBRAK\n    \n    br_expr : LPAREN expression RPAREN\n    \n    f_call  : factor LPAREN params DOTS RPAREN\n            | factor LPAREN params RPAREN\n            | factor LPAREN RPAREN\n    \n    params  : params CAMMA expression\n            | expression\n    \n    function_set    : SET LPAREN ID CAMMA expression RPAREN\n    \n    function_apply  : APPLY LPAREN params RPAREN\n    \n    function_if : IF LPAREN expression CAMMA expression CAMMA expression RPAREN\n    \n    function_lambda : LAMBDA LPAREN LPAREN args DOTS RPAREN  CAMMA expression RPAREN\n                    | LAMBDA LPAREN LPAREN args RPAREN CAMMA expression RPAREN\n                    | LAMBDA LPAREN LPAREN RPAREN CAMMA expression RPAREN\n    \n    call_cc : CALLCC LPAREN expression RPAREN\n    '
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,122,123,124,126,127,128,130,132,133,134,135,137,138,139,140,141,142,143,145,146,147,149,150,151,152,153,154,155,156,160,161,162,163,166,168,169,170,171,172,173,175,176,178,179,180,183,184,185,189,190,191,192,193,194,195,196,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,],[15,56,-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,71,-74,76,15,15,15,84,85,15,15,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,71,-69,-70,-71,-72,-73,15,-75,15,15,15,71,71,71,71,71,71,71,71,71,71,71,15,15,-51,-74,15,125,-77,56,56,15,131,56,-29,56,138,56,-52,-76,15,-80,15,-81,56,-32,15,15,15,15,56,56,56,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,56,-89,56,15,56,15,15,15,56,131,15,-86,15,131,15,15,-74,56,56,15,56,56,56,71,-84,-88,15,56,56,56,15,56,15,15,186,56,56,56,15,56,15,56,-93,-98,-87,56,56,15,56,15,15,56,15,15,56,56,-85,15,-92,56,15,15,56,56,15,56,56,56,56,15,56,-97,56,15,-94,56,-96,56,-95,]),'SET':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[16,72,16,16,16,16,16,72,16,16,16,16,72,72,72,72,72,72,72,72,72,72,72,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,72,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'IF':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[18,73,18,18,18,18,18,73,18,18,18,18,73,73,73,73,73,73,73,73,73,73,73,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,73,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LAMBDA':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[19,74,19,19,19,19,19,74,19,19,19,19,74,74,74,74,74,74,74,74,74,74,74,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,74,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'VAR':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'DEF':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'WHILE':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'MACRO':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,17,18,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,49,50,54,55,56,68,69,70,71,75,78,79,80,81,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,122,123,124,126,127,130,132,133,135,137,138,139,140,141,142,143,145,147,149,150,151,152,153,154,155,156,160,162,163,166,168,169,170,171,172,173,175,176,178,179,180,183,184,185,189,190,191,192,193,194,195,196,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,],[14,55,-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-74,14,14,14,14,14,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,14,-75,14,14,14,14,14,-51,-74,14,-77,55,55,14,55,-29,55,14,55,-52,-76,14,-80,14,-81,55,-32,14,14,14,14,55,55,55,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,55,-89,55,14,55,14,14,14,55,14,-86,14,14,14,-74,55,55,14,55,55,55,-84,-88,14,55,55,55,14,55,14,14,55,55,55,14,55,14,55,-93,-98,-87,55,55,14,55,14,14,55,14,14,55,55,-85,14,-92,55,14,14,55,55,14,55,55,55,55,14,55,-97,55,14,-94,55,-96,55,-95,]),'NOT':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'TRUE':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'FALSE':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'INT':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'FLOAT':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'FRACT':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'LBRAK':([0,11,14,15,17,18,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,81,87,89,90,91,92,93,94,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,118,120,123,124,126,130,132,133,135,137,138,141,146,147,149,150,154,156,160,168,170,172,173,174,175,179,183,184,189,190,193,194,195,197,199,202,208,210,212,213,215,217,],[17,68,17,-74,17,17,17,17,17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,17,-69,-70,-71,-72,-73,17,-75,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,68,-74,17,124,-77,17,17,68,-76,17,-80,17,-81,-32,17,17,17,17,68,68,68,68,68,68,68,68,68,68,68,68,-89,17,17,17,17,17,-86,17,17,17,-74,17,17,-84,-88,17,17,17,17,17,17,-93,-98,68,-87,17,17,17,17,17,-85,17,-92,17,17,17,17,-97,17,-94,-96,-95,]),'LBRAC':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'STR':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'LPAREN':([0,11,14,15,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,81,82,85,87,89,90,91,92,93,94,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,118,120,121,123,124,126,130,132,133,135,137,138,141,146,147,149,150,154,156,160,168,170,172,173,174,175,179,183,184,189,190,193,194,195,197,199,202,208,210,212,213,215,217,],[20,69,20,-74,77,20,81,82,20,20,87,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,20,-69,-70,-71,-72,-73,20,-75,99,100,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,69,-74,77,120,121,20,-77,20,128,134,20,69,-76,20,-80,20,-81,-32,20,20,20,20,69,69,69,69,69,69,69,69,69,69,69,69,-89,20,128,20,20,20,20,-86,20,20,20,-74,20,20,-84,-88,20,20,20,20,20,20,-93,-98,69,-87,20,20,20,20,20,-85,20,-92,20,20,20,20,-97,20,-94,-96,-95,]),'APPLY':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'CALLCC':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,84,88,89,90,92,94,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,122,132,147,149,152,162,163,166,169,172,173,175,185,191,193,195,196,201,204,205,206,210,211,213,215,216,217,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-29,-25,-52,-76,-80,-81,-32,-10,-11,-12,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-89,-13,-86,-84,-88,-14,-19,-30,-31,-24,-93,-98,-87,-18,-23,-85,-92,-16,-17,-28,-22,-15,-97,-26,-94,-96,-27,-95,]),'PLUS':([1,2,3,4,5,6,7,8,9,10,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,79,80,83,84,86,88,89,90,92,94,95,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,122,127,132,138,139,140,142,143,145,147,149,151,152,153,155,162,163,166,169,171,172,173,175,176,178,180,185,191,192,193,195,196,200,201,204,205,206,207,209,210,211,213,214,215,216,217,],[54,-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,54,54,54,-29,54,54,-52,-76,-80,-81,54,-32,54,54,54,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,54,-89,54,54,54,-86,-74,54,54,54,54,54,-84,-88,54,54,54,54,54,54,54,54,54,-93,-98,-87,54,54,54,54,54,54,-85,-92,54,54,54,54,54,54,54,54,-97,54,-94,54,-96,54,-95,]),'RBRAK':([2,3,4,5,6,7,8,9,10,11,12,13,15,17,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,50,70,71,78,79,84,88,89,90,92,94,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,122,132,139,147,149,152,153,162,163,166,169,172,173,174,175,185,191,193,195,196,201,204,205,206,210,211,213,215,216,217,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-74,78,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,90,-75,-51,-74,-77,-79,-29,-25,-52,-76,-80,-81,-32,-10,-11,-12,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,147,-89,-13,-86,-78,-84,-88,-14,177,-19,-30,-31,-24,-93,-98,193,-87,-18,-23,-85,-92,-16,-17,-28,-22,-15,-97,-26,-94,-96,-27,-95,]),'CAMMA':([2,3,4,5,6,7,8,9,10,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,70,71,78,79,84,88,89,90,92,94,95,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,118,119,122,125,127,129,131,132,136,138,139,142,143,144,147,149,151,152,157,158,162,163,164,166,169,171,172,173,175,176,180,182,185,186,191,192,193,195,196,198,201,204,205,206,210,211,213,215,216,217,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,91,93,-36,-75,98,-51,-74,-77,-79,-29,-25,-52,-76,-80,-81,-35,-32,-10,-11,-12,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,150,-89,-91,-13,154,156,161,-20,-86,161,-20,-78,-33,-34,150,-84,-88,156,-14,161,183,-19,-30,161,-31,-24,-83,-93,-98,-87,-90,197,199,-18,-21,-23,-82,-85,-92,-16,208,-17,-28,-22,-15,-97,-26,-94,-96,-27,-95,]),'COL':([2,3,4,5,6,7,8,9,10,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,80,84,86,88,89,90,92,94,95,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,122,132,140,147,149,152,155,162,163,166,169,172,173,175,185,191,193,195,196,201,204,205,206,210,211,213,215,216,217,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,126,-29,135,-25,-52,-76,-80,-81,141,-32,-10,-11,-12,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,146,-89,-13,-86,170,-84,-88,-14,179,-19,-30,-31,-24,-93,-98,-87,-18,-23,-85,-92,-16,-17,-28,-22,-15,-97,-26,-94,-96,-27,-95,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,69,70,71,78,82,83,84,87,88,89,90,92,94,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,118,119,122,127,128,129,131,132,134,136,138,144,145,147,148,149,152,157,159,162,163,164,166,167,169,172,173,175,176,178,181,185,186,188,191,193,195,196,200,201,204,205,206,207,209,210,211,213,214,215,216,217,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,118,-51,-74,-77,130,132,-29,137,-25,-52,-76,-80,-81,-32,-10,-11,-12,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,149,-89,-91,-13,132,158,160,-20,-86,165,168,-20,172,173,-84,175,-88,-14,182,184,-19,-30,187,-31,190,-24,-93,-98,-87,-90,195,198,-18,-21,203,-23,-85,-92,-16,210,-17,-28,-22,-15,213,215,-97,-26,-94,217,-96,-27,-95,]),'RBRAC':([2,3,4,5,6,7,8,9,10,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,48,49,50,51,70,71,78,84,88,89,90,92,94,95,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,122,132,142,143,147,149,152,162,163,166,169,171,172,173,175,185,191,192,193,195,196,201,204,205,206,210,211,213,215,216,217,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,92,94,-75,96,-51,-74,-77,-29,-25,-52,-76,-80,-81,-35,-32,-10,-11,-12,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-89,-13,-86,-33,-34,-84,-88,-14,-19,-30,-31,-24,-83,-93,-98,-87,-18,-23,-82,-85,-92,-16,-17,-28,-22,-15,-97,-26,-94,-96,-27,-95,]),'SEMICOL':([2,3,4,5,6,7,8,9,10,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,49,50,51,70,71,78,84,88,89,90,92,94,95,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,122,132,142,143,147,149,152,162,163,166,169,172,173,175,185,191,193,195,196,201,204,205,206,210,211,213,215,216,217,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-36,-75,97,-51,-74,-77,-29,-25,-52,-76,-80,-81,-35,-32,-10,-11,-12,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-89,-13,-86,-33,-34,-84,-88,-14,-19,-30,-31,-24,-93,-98,-87,-18,-23,-85,-92,-16,-17,-28,-22,-15,-97,-26,-94,-96,-27,-95,]),'DOTS':([2,3,4,5,6,7,8,9,10,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,84,88,89,90,92,94,96,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,118,119,122,129,131,132,136,138,147,149,152,157,162,163,164,166,169,172,173,175,176,185,186,191,193,195,196,201,204,205,206,210,211,213,215,216,217,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-29,-25,-52,-76,-80,-81,-32,-10,-11,-12,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,148,-89,-91,-13,159,-20,-86,167,-20,-84,-88,-14,181,-19,-30,188,-31,-24,-93,-98,-87,-90,-18,-21,-23,-85,-92,-16,-17,-28,-22,-15,-97,-26,-94,-96,-27,-95,]),'TIMES':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[57,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'DIVIDE':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[58,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'POW':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[59,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'PERC':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[60,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'EQUAL':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[61,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'NEQ':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[62,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'GEQ':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[63,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'LEQ':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[64,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'GT':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[65,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'LT':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[66,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'IS':([2,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,50,70,71,78,89,90,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,118,132,138,147,149,172,173,175,193,195,210,213,215,217,],[67,-37,-38,-39,-74,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-75,-51,-74,-77,-52,-76,-80,-81,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-89,-86,-74,-84,-88,-93,-98,-87,-85,-92,-97,-94,-96,-95,]),'LET':([15,76,84,138,165,177,187,203,],[75,123,133,75,189,194,202,212,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[1,79,80,83,86,88,95,101,102,103,116,119,122,127,83,139,140,142,143,119,145,151,152,153,155,162,163,166,169,171,176,178,180,185,191,192,196,200,201,204,205,206,207,209,211,214,216,]),'term':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'expression_2op':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expression_set':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expression_if':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expression_lambda':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression_decl':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expression_function_decl':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'expression_while':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'expression_macro':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'factor':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[11,70,11,11,11,11,11,89,11,11,11,11,104,105,106,107,108,109,110,111,112,113,114,115,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,174,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'term_2op':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'term_1op':([0,17,18,20,23,24,49,54,55,56,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'bool':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'number':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'var':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'vector':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'dict':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'string':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'vect_ref':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'vect_slice':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'f_call':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'br_expr':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'mult_expression':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'function_apply':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'function_set':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'function_if':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'function_lambda':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'call_cc':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'lvector':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ldict':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'left_mult_exp':([0,14,17,18,20,23,24,41,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,81,87,91,93,97,98,99,100,120,123,124,126,130,133,135,137,141,146,150,154,156,160,168,170,179,183,184,189,190,194,197,199,202,208,212,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'params':([69,99,],[117,144,]),'args':([82,87,128,134,],[129,136,157,164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> term','expression',1,'p_expression','yacc_test.py',180),
  ('expression -> expression_2op','expression',1,'p_expression','yacc_test.py',181),
  ('expression -> expression_set','expression',1,'p_expression','yacc_test.py',182),
  ('expression -> expression_if','expression',1,'p_expression','yacc_test.py',183),
  ('expression -> expression_lambda','expression',1,'p_expression','yacc_test.py',184),
  ('expression -> expression_decl','expression',1,'p_expression','yacc_test.py',185),
  ('expression -> expression_function_decl','expression',1,'p_expression','yacc_test.py',186),
  ('expression -> expression_while','expression',1,'p_expression','yacc_test.py',187),
  ('expression -> expression_macro','expression',1,'p_expression','yacc_test.py',188),
  ('expression_2op -> expression PLUS expression','expression_2op',3,'p_expression_2op','yacc_test.py',194),
  ('expression_2op -> expression MINUS expression','expression_2op',3,'p_expression_2op','yacc_test.py',195),
  ('expression_2op -> expression ID expression','expression_2op',3,'p_expression_2op','yacc_test.py',196),
  ('expression_set -> ID LET expression','expression_set',3,'p_expression_set','yacc_test.py',230),
  ('expression_set -> SET ID LET expression','expression_set',4,'p_expression_set','yacc_test.py',231),
  ('expression_set -> SET ID LBRAK expression RBRAK LET expression','expression_set',7,'p_expression_set','yacc_test.py',232),
  ('expression_if -> IF expression COL expression COL expression','expression_if',6,'p_expression_if','yacc_test.py',254),
  ('expression_lambda -> LAMBDA LPAREN args DOTS RPAREN expression','expression_lambda',6,'p_expression_lambda','yacc_test.py',267),
  ('expression_lambda -> LAMBDA LPAREN args RPAREN expression','expression_lambda',5,'p_expression_lambda','yacc_test.py',268),
  ('expression_lambda -> LAMBDA LPAREN RPAREN expression','expression_lambda',4,'p_expression_lambda','yacc_test.py',269),
  ('args -> ID','args',1,'p_args','yacc_test.py',289),
  ('args -> args CAMMA ID','args',3,'p_args','yacc_test.py',290),
  ('expression_macro -> MACRO LPAREN args DOTS RPAREN expression','expression_macro',6,'p_expression_macro','yacc_test.py',297),
  ('expression_macro -> MACRO LPAREN args RPAREN expression','expression_macro',5,'p_expression_macro','yacc_test.py',298),
  ('expression_macro -> MACRO LPAREN RPAREN expression','expression_macro',4,'p_expression_macro','yacc_test.py',299),
  ('expression_macro -> MACRO expression','expression_macro',2,'p_expression_macro','yacc_test.py',300),
  ('expression_function_decl -> DEF ID LPAREN args RPAREN LET expression','expression_function_decl',7,'p_expression_func_decl','yacc_test.py',321),
  ('expression_function_decl -> DEF ID LPAREN args DOTS RPAREN LET expression','expression_function_decl',8,'p_expression_func_decl','yacc_test.py',322),
  ('expression_function_decl -> DEF ID LPAREN RPAREN LET expression','expression_function_decl',6,'p_expression_func_decl','yacc_test.py',323),
  ('expression_decl -> VAR ID','expression_decl',2,'p_decl_exp','yacc_test.py',340),
  ('expression_decl -> VAR ID LET expression','expression_decl',4,'p_decl_exp','yacc_test.py',341),
  ('expression_while -> WHILE expression COL expression','expression_while',4,'p_while_exp','yacc_test.py',348),
  ('mult_expression -> left_mult_exp RBRAC','mult_expression',2,'p_mult_expression','yacc_test.py',354),
  ('left_mult_exp -> left_mult_exp SEMICOL expression','left_mult_exp',3,'p_lieft_mult_exp','yacc_test.py',369),
  ('left_mult_exp -> left_mult_exp CAMMA expression','left_mult_exp',3,'p_lieft_mult_exp','yacc_test.py',370),
  ('left_mult_exp -> LBRAC expression','left_mult_exp',2,'p_lieft_mult_exp','yacc_test.py',371),
  ('left_mult_exp -> LBRAC','left_mult_exp',1,'p_lieft_mult_exp','yacc_test.py',372),
  ('term -> factor','term',1,'p_term','yacc_test.py',383),
  ('term -> term_2op','term',1,'p_term','yacc_test.py',384),
  ('term -> term_1op','term',1,'p_term','yacc_test.py',385),
  ('term_2op -> term TIMES factor','term_2op',3,'p_term_2op','yacc_test.py',393),
  ('term_2op -> term DIVIDE factor','term_2op',3,'p_term_2op','yacc_test.py',394),
  ('term_2op -> term POW factor','term_2op',3,'p_term_2op','yacc_test.py',395),
  ('term_2op -> term PERC factor','term_2op',3,'p_term_2op','yacc_test.py',396),
  ('term_2op -> term EQUAL factor','term_2op',3,'p_term_2op','yacc_test.py',397),
  ('term_2op -> term NEQ factor','term_2op',3,'p_term_2op','yacc_test.py',398),
  ('term_2op -> term GEQ factor','term_2op',3,'p_term_2op','yacc_test.py',399),
  ('term_2op -> term LEQ factor','term_2op',3,'p_term_2op','yacc_test.py',400),
  ('term_2op -> term GT factor','term_2op',3,'p_term_2op','yacc_test.py',401),
  ('term_2op -> term LT factor','term_2op',3,'p_term_2op','yacc_test.py',402),
  ('term_2op -> term IS factor','term_2op',3,'p_term_2op','yacc_test.py',403),
  ('term_1op -> MINUS factor','term_1op',2,'p_term_1op','yacc_test.py',432),
  ('term_1op -> NOT factor','term_1op',2,'p_term_1op','yacc_test.py',433),
  ('factor -> bool','factor',1,'p_factor','yacc_test.py',446),
  ('factor -> number','factor',1,'p_factor','yacc_test.py',447),
  ('factor -> var','factor',1,'p_factor','yacc_test.py',448),
  ('factor -> vector','factor',1,'p_factor','yacc_test.py',449),
  ('factor -> dict','factor',1,'p_factor','yacc_test.py',450),
  ('factor -> string','factor',1,'p_factor','yacc_test.py',451),
  ('factor -> vect_ref','factor',1,'p_factor','yacc_test.py',452),
  ('factor -> vect_slice','factor',1,'p_factor','yacc_test.py',453),
  ('factor -> f_call','factor',1,'p_factor','yacc_test.py',454),
  ('factor -> br_expr','factor',1,'p_factor','yacc_test.py',455),
  ('factor -> mult_expression','factor',1,'p_factor','yacc_test.py',456),
  ('factor -> function_apply','factor',1,'p_factor','yacc_test.py',457),
  ('factor -> function_set','factor',1,'p_factor','yacc_test.py',458),
  ('factor -> function_if','factor',1,'p_factor','yacc_test.py',459),
  ('factor -> function_lambda','factor',1,'p_factor','yacc_test.py',460),
  ('factor -> call_cc','factor',1,'p_factor','yacc_test.py',461),
  ('bool -> TRUE','bool',1,'p_factor_bool','yacc_test.py',467),
  ('bool -> FALSE','bool',1,'p_factor_bool','yacc_test.py',468),
  ('number -> INT','number',1,'p_factor_num','yacc_test.py',475),
  ('number -> FLOAT','number',1,'p_factor_num','yacc_test.py',476),
  ('number -> FRACT','number',1,'p_factor_num','yacc_test.py',477),
  ('var -> ID','var',1,'p_factor_var','yacc_test.py',483),
  ('string -> STR','string',1,'p_factor_str','yacc_test.py',503),
  ('vector -> lvector RBRAK','vector',2,'p_vector','yacc_test.py',509),
  ('vector -> LBRAK RBRAK','vector',2,'p_vector','yacc_test.py',510),
  ('lvector -> lvector CAMMA expression','lvector',3,'p_lvector','yacc_test.py',529),
  ('lvector -> LBRAK expression','lvector',2,'p_lvector','yacc_test.py',530),
  ('dict -> ldict RBRAC','dict',2,'p_dict','yacc_test.py',537),
  ('dict -> LBRAC RBRAC','dict',2,'p_dict','yacc_test.py',538),
  ('ldict -> ldict CAMMA expression COL expression','ldict',5,'p_ldict','yacc_test.py',551),
  ('ldict -> LBRAC expression COL expression','ldict',4,'p_ldict','yacc_test.py',552),
  ('vect_ref -> factor LBRAK expression RBRAK','vect_ref',4,'p_factor_ref','yacc_test.py',561),
  ('vect_slice -> factor LBRAK factor COL factor RBRAK','vect_slice',6,'p_factor_slice','yacc_test.py',566),
  ('br_expr -> LPAREN expression RPAREN','br_expr',3,'p_factor_br_expr','yacc_test.py',572),
  ('f_call -> factor LPAREN params DOTS RPAREN','f_call',5,'p_factor_f_call','yacc_test.py',578),
  ('f_call -> factor LPAREN params RPAREN','f_call',4,'p_factor_f_call','yacc_test.py',579),
  ('f_call -> factor LPAREN RPAREN','f_call',3,'p_factor_f_call','yacc_test.py',580),
  ('params -> params CAMMA expression','params',3,'p_params','yacc_test.py',615),
  ('params -> expression','params',1,'p_params','yacc_test.py',616),
  ('function_set -> SET LPAREN ID CAMMA expression RPAREN','function_set',6,'p_factor_set','yacc_test.py',622),
  ('function_apply -> APPLY LPAREN params RPAREN','function_apply',4,'p_factor_apply','yacc_test.py',627),
  ('function_if -> IF LPAREN expression CAMMA expression CAMMA expression RPAREN','function_if',8,'p_factor_if','yacc_test.py',636),
  ('function_lambda -> LAMBDA LPAREN LPAREN args DOTS RPAREN CAMMA expression RPAREN','function_lambda',9,'p_factor_lambda','yacc_test.py',647),
  ('function_lambda -> LAMBDA LPAREN LPAREN args RPAREN CAMMA expression RPAREN','function_lambda',8,'p_factor_lambda','yacc_test.py',648),
  ('function_lambda -> LAMBDA LPAREN LPAREN RPAREN CAMMA expression RPAREN','function_lambda',7,'p_factor_lambda','yacc_test.py',649),
  ('call_cc -> CALLCC LPAREN expression RPAREN','call_cc',4,'p_factor_callcc','yacc_test.py',656),
]
